worker_processes 1;

error_log /tmp/nginx.log debug;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    server {
        listen 8000;
        server_name auth-service;
        rewrite_log on;
        location / {
            set $user '';
            access_by_lua '
                local cjson = require "cjson"
                local res = ngx.location.capture("/auth")
                if res.status < 200 or res.status > 299 then
                  ngx.status = res.status
                  ngx.say(res.body)
                  ngx.exit(ngx.HTTP_OK)
                end
                local json = cjson.decode(res.body)
                ngx.var.user = json.user
            ';

            proxy_pass http://localhost:3000/showUser/;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-User $user;
            proxy_set_header X-Original-URI $request_uri;
        }
        location /auth {
                internal;
                proxy_pass http://localhost:3000/checkToken/$cookie_token/;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
                proxy_set_header X-Original-URI $request_uri;
        }
        location /login {
                content_by_lua '
                  local cjson = require "cjson"
                  ngx.req.read_body()
                  local body = ngx.req.get_body_data()
                  local res = ngx.location.capture("/@login"
                                                  , { method = ngx.HTTP_POST
                                                    , body = body })
                  if res.status < 200 or res.status > 299 then
                    ngx.status = res.status
                    ngx.say(res.body)
                    ngx.exit(ngx.HTTP_OK)
                  end
                  local text = res.body
                  local json = cjson.decode(text)
                  ngx.header.Set_Cookie =  "token="..json.token
               ';

        }

        location /@login {
               internal;
               proxy_pass http://localhost:3000/login/;
               proxy_set_header X-Original-URI $request_uri;
        }

    }
 }